openapi: 3.0.0
info:
  version: 1.0.0
  title: PagoPA Ecommerce Watchdog Service API
  description: API service to monitor deadletter transactions and manually track recovery or follow-up actions.
servers:
  - url: https://${host}
tags:
  - name: deadletter-transactions
    description: Deadletter transaction management
  - name: deadletter-transactions-actions
    description: Manual actions or notes related to deadletter transactions
  - name: authentication
    description: User authentication
paths:
  /deadletter-transactions:
    get:
      tags:
        - deadletter-transactions
      summary: List all deadletter transactions
      operationId: listDeadletterTransactions
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2025-08-19'
          description: Filter transactions by date (format YYYY-MM-DD)
        - name: pageNumber
          in: query
          required: true
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Searched page number, starting from 0
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
          description: Max element per page
      responses:
        '200':
          description: List of deadletter transactions with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  deadletterTransactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeadletterTransaction'
                  page:
                    $ref: '#/components/schemas/PageInfo'
                required:
                  - deadletterTransactions
                  - page
        '400':
          description: Invalid request or query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Unauthorized. Missing or invalid authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /deadletter-transactions/{transactionId}/actions:
    get:
      tags:
        - deadletter-transactions-actions
      summary: List actions for a specific deadletter transaction
      operationId: listActionsForDeadletterTransaction
      security:
        - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          description: Deadletter transaction unique ID
      responses:
        '200':
          description: List of actions taken on the specified deadletter transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeadletterTransactionAction'
        '400':
          description: Invalid path parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Unauthorized. Missing or invalid authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Deadletter transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
    post:
      tags:
        - deadletter-transactions-actions
      summary: Add a new action to a deadletter transaction
      operationId: addActionToDeadletterTransaction
      security:
        - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          description: Deadletter transaction unique ID
      requestBody:
        description: Action to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeadletterTransactionActionInput'
      responses:
        '201':
          description: Action added successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Unauthorized. Missing or invalid authentication token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Deadletter transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /authenticate:
    post:
      tags:
        - authentication
      summary: User authentication
      operationId: authenticateUser
      requestBody:
        description: Body containing username and password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationCredentials"
      responses:
        '200':
          description: Successful authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationOk'
        '400':
          description: Bad Request. The request body is missing required fields or is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Unauthorized. The provided credentials are invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PageInfo:
      description: Information about the returned query page
      type: object
      properties:
        current:
          type: integer
          description: Current returned page index (0-based)
        total:
          type: integer
          description: Total pages for the query (based on requested page size)
        results:
          type: integer
          description: Transactions returned into the current page
      required:
        - current
        - results
        - total
    DeadletterTransaction:
      type: object
      properties:
        transactionId:
          type: string
        insertionDate:
          type: string
          format: date-time
        paymentToken:
          type: string
        paymentMethodName:
          type: string
        pspId:
          type: string
        eCommerceStatus:
          type: string
        gatewayAuthorizationStatus:
          type: string
        paymentEndToEndId:
          type: string
        operationId:
          type: string
        deadletterTransactionDetails:
          type: object
        eCommerceDetails:
          type: object
        nodoDetails:
          type: object
        npgDetails:
          type: object
      required:
        - id
        - insertionDate
        - transactionId
        - paymentToken
        - paymentMethodName
        - pspId
        - eCommerceStatus
        - deadletterTransactionDetails
    DeadletterTransactionAction:
      type: object
      properties:
        id:
          type: string
        transactionId:
          type: string
        userId:
          type: string
        value:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - id
        - transactionId
        - userId
        - value
        - timestamp
    DeadletterTransactionActionInput:
      type: object
      properties:
        value:
          type: string
      required:
        - value
    AuthenticationCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - password
    AuthenticationOk:
      type: object
      properties:
        urlRedirect:
          type: string
          example: https://watchdog-fe/#token=123
      required:
        - urlRedirect
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://example.com/problem/invalid-request
        title:
          type: string
          example: Invalid Request
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: The provided input is not valid
        instance:
          type: string
          format: uri
          example: /deadletter-transactions/123/actions