services:
  pagopa-ecommerce-watchdog-deadletter-service:
    container_name: pagopa-ecommerce-watchdog-deadletter-service
    build:
      dockerfile: "${DOCKER_FILE_NAME}"
      context: .
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    networks:
      - pagopa-ecommerce-watchdog-deadletter-service-net
  pagopa-ecommerce-helpdesk-service-mock:
    container_name: pagopa-ecommerce-helpdesk-service-mock
    volumes:
      - type: bind
        source: ./docker/ecommerce-helpdesk-mock
        target: /config
        read_only: true
    build:
      context: .
      dockerfile: docker/ecommerce-helpdesk-mock/Dockerfile.helpdesk-mock
    ports:
      - "8091:3000"
    networks:
      - pagopa-ecommerce-watchdog-deadletter-service-net
  pagopa-nodo-technical-support-mock:
    container_name: pagopa-nodo-technical-support-mock
    build:
      context: .
      dockerfile: docker/nodo-technical-support-mock/Dockerfile.nodo-technical-support-mock
    volumes:
      - type: bind
        source: ./docker/nodo-technical-support-mock
        target: /config
        read_only: true
    ports:
      - "8090:3000"
    networks:
      - pagopa-ecommerce-watchdog-deadletter-service-net
  mongo:
    image: mongo:7-jammy
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: myuser
      MONGO_INITDB_ROOT_PASSWORD: mypassword
    networks:
      - pagopa-ecommerce-watchdog-deadletter-service-net
    volumes:
      - mongodata:/data/db

volumes:
  mongodata:
networks:
  pagopa-ecommerce-watchdog-deadletter-service-net:
    driver: bridge
